// <auto-generated />
using System;
using ExamCS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamCS.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExamCS.Models.Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("HobbyId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("ExamCS.Models.Proficency", b =>
                {
                    b.Property<int>("ProficencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EnthusiastId")
                        .HasColumnType("int");

                    b.Property<int?>("HobbyId")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProficencyId");

                    b.HasIndex("EnthusiastId");

                    b.HasIndex("HobbyId");

                    b.ToTable("Proficencies");
                });

            modelBuilder.Entity("ExamCS.Models.UserReg", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamCS.Models.Hobby", b =>
                {
                    b.HasOne("ExamCS.Models.UserReg", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("ExamCS.Models.Proficency", b =>
                {
                    b.HasOne("ExamCS.Models.UserReg", "Enthusiast")
                        .WithMany()
                        .HasForeignKey("EnthusiastId");

                    b.HasOne("ExamCS.Models.Hobby", "Hobby")
                        .WithMany("Proficencies")
                        .HasForeignKey("HobbyId");

                    b.Navigation("Enthusiast");

                    b.Navigation("Hobby");
                });

            modelBuilder.Entity("ExamCS.Models.Hobby", b =>
                {
                    b.Navigation("Proficencies");
                });
#pragma warning restore 612, 618
        }
    }
}
